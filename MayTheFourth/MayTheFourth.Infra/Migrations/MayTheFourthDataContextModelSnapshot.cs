// <auto-generated />
using System;
using MayTheFourth.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MayTheFourth.Migrations
{
    [DbContext(typeof(MayTheFourthDataContext))]
    partial class MayTheFourthDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("FilmePersonagem", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonagemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmeId", "PersonagemId");

                    b.HasIndex("PersonagemId");

                    b.ToTable("FilmePersonagem");
                });

            modelBuilder.Entity("FilmePlaneta", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanetaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VeiculoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmeId", "PlanetaId");

                    b.HasIndex("PlanetaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("FilmePlaneta");
                });

            modelBuilder.Entity("MayTheFourth.Dtos.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataLancamento")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("DataLancamento");

                    b.Property<string>("Diretor")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Diretor");

                    b.Property<int>("Episodio")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Episodio");

                    b.Property<string>("Produtor")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Produtor");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.ToTable("Filme", (string)null);
                });

            modelBuilder.Entity("MayTheFourth.Dtos.NavesEstelares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CapacidadeCarga")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("CapacidadeCarga");

                    b.Property<string>("Classe")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Classe");

                    b.Property<string>("ClassificacaoHiperdrive")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("ClassificacaoHiperdrive");

                    b.Property<string>("Comprimento")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Comprimento");

                    b.Property<string>("Consumiveis")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Consumiveis");

                    b.Property<string>("Custo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Custo");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Fabricante");

                    b.Property<string>("Mglt")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Mglt");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Modelo");

                    b.Property<string>("Passageiros")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Passageiros");

                    b.Property<string>("Tripulacao")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Tripulacao");

                    b.Property<string>("VelocidadeMaxima")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("VelocidadeMaxima");

                    b.HasKey("Id");

                    b.ToTable("NavesEstelares", (string)null);
                });

            modelBuilder.Entity("MayTheFourth.Dtos.Personagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Altura")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Altura");

                    b.Property<string>("CorCabelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("CorCabelo");

                    b.Property<string>("CorOlhos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("CorOlhos");

                    b.Property<string>("CorPele")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("CorPele");

                    b.Property<DateTime>("DataNascimento")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Genero");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("Peso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Peso");

                    b.Property<int>("PlanetaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlanetaId");

                    b.ToTable("Personagem", (string)null);
                });

            modelBuilder.Entity("MayTheFourth.Dtos.Planeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clima")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Clima");

                    b.Property<string>("Diametro")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Diametro");

                    b.Property<string>("Gravidade")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Gravidade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("PeriodoOrbital")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("PeriodoOrbital");

                    b.Property<string>("PeriodoRotacao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("PeriodoRotacao");

                    b.Property<string>("Populacao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Populacao");

                    b.Property<string>("SuperficieAquatica")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("SuperficieAquatica");

                    b.Property<string>("Terreno")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Terreno");

                    b.HasKey("Id");

                    b.ToTable("Planeta", (string)null);
                });

            modelBuilder.Entity("MayTheFourth.Dtos.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CapacidadeCarga")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("CapacidadeCarga");

                    b.Property<string>("Classe")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Classe");

                    b.Property<string>("Comprimento")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Comprimento");

                    b.Property<string>("Consumiveis")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Consumiveis");

                    b.Property<string>("Custo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Custo");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Fabricante");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Modelo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("Passageiros")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Passageiros");

                    b.Property<string>("Tripulacao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Tripulacao");

                    b.Property<string>("VelocidadeMaxima")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("VelocidadeMaxima");

                    b.HasKey("Id");

                    b.ToTable("Veiculo", (string)null);
                });

            modelBuilder.Entity("NavesEstelaresFilme", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NavesEstelaresId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmeId", "NavesEstelaresId");

                    b.HasIndex("NavesEstelaresId");

                    b.ToTable("NavesEstelaresFilme");
                });

            modelBuilder.Entity("PersonagemFilme", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonagemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmeId", "PersonagemId");

                    b.HasIndex("PersonagemId");

                    b.ToTable("PersonagemFilme");
                });

            modelBuilder.Entity("PersonagemNavesEstelares", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NavesEstelaresId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmeId", "NavesEstelaresId");

                    b.HasIndex("NavesEstelaresId");

                    b.ToTable("PersonagemNavesEstelares");
                });

            modelBuilder.Entity("PlanetaFilme", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanetaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmeId", "PlanetaId");

                    b.HasIndex("PlanetaId");

                    b.ToTable("PlanetaFilme");
                });

            modelBuilder.Entity("VeiculoFilme", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmeId", "VeiculoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("VeiculoFilme");
                });

            modelBuilder.Entity("FilmePersonagem", b =>
                {
                    b.HasOne("MayTheFourth.Dtos.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Filme_FilmeId");

                    b.HasOne("MayTheFourth.Dtos.Personagem", null)
                        .WithMany()
                        .HasForeignKey("PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PersonagemFilme_PersonagemId");
                });

            modelBuilder.Entity("FilmePlaneta", b =>
                {
                    b.HasOne("MayTheFourth.Dtos.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Filme_FilmeId");

                    b.HasOne("MayTheFourth.Dtos.Planeta", null)
                        .WithMany()
                        .HasForeignKey("PlanetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PlanetaFilme_PlanetaId");

                    b.HasOne("MayTheFourth.Dtos.Veiculo", null)
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_VeiculoFilme_VeiculoId");
                });

            modelBuilder.Entity("MayTheFourth.Dtos.Personagem", b =>
                {
                    b.HasOne("MayTheFourth.Dtos.Planeta", "Planeta")
                        .WithMany("Personagens")
                        .HasForeignKey("PlanetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Planeta_Personagem");

                    b.Navigation("Planeta");
                });

            modelBuilder.Entity("NavesEstelaresFilme", b =>
                {
                    b.HasOne("MayTheFourth.Dtos.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FilmeNavesEstelaresId_FilmeId");

                    b.HasOne("MayTheFourth.Dtos.NavesEstelares", null)
                        .WithMany()
                        .HasForeignKey("NavesEstelaresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NavesEstelares_NavesEstelaresId");
                });

            modelBuilder.Entity("PersonagemFilme", b =>
                {
                    b.HasOne("MayTheFourth.Dtos.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FilmePersonagem_FilmeId");

                    b.HasOne("MayTheFourth.Dtos.Personagem", null)
                        .WithMany()
                        .HasForeignKey("PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Personagem_PersonagemId");
                });

            modelBuilder.Entity("PersonagemNavesEstelares", b =>
                {
                    b.HasOne("MayTheFourth.Dtos.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Filme_FilmeId");

                    b.HasOne("MayTheFourth.Dtos.NavesEstelares", null)
                        .WithMany()
                        .HasForeignKey("NavesEstelaresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NavesEstelaresFilme_NavesEstelaresId");
                });

            modelBuilder.Entity("PlanetaFilme", b =>
                {
                    b.HasOne("MayTheFourth.Dtos.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FilmePlaneta_FilmeId");

                    b.HasOne("MayTheFourth.Dtos.Planeta", null)
                        .WithMany()
                        .HasForeignKey("PlanetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Planeta_PlanetaId");
                });

            modelBuilder.Entity("VeiculoFilme", b =>
                {
                    b.HasOne("MayTheFourth.Dtos.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FilmeVeiculo_FilmeId");

                    b.HasOne("MayTheFourth.Dtos.Veiculo", null)
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Veiculo_VeiculoId");
                });

            modelBuilder.Entity("MayTheFourth.Dtos.Planeta", b =>
                {
                    b.Navigation("Personagens");
                });
#pragma warning restore 612, 618
        }
    }
}
